


ARM Macro Assembler    Page 1 


    1 00000000                 THUMB
    2 00000000                 AREA             CLASE1, ALIGN=4
    3 00000000 00 00 00 
              00       mem     SPACE            4
    4 00000004                 AREA             |text.|, CODE, READONLY, ALIGN=
2
    5 00000000                 EXPORT           Start
    6 00000000         
    7 00000000         Start
    8 00000000 EEB7 0A00       VMOV.F32         S0, #1      ;Se asigna el valor
                                                             de "n" al registro
                                                             S0 --> S0 = n
    9 00000004 EEF2 0A04       VMOV.F32         S1, #10     ;Se asigna el valor
                                                             de "N" al registro
                                                             S1 --> S1 = N
   10 00000008         
   11 00000008 EEF7 1A00       VMOV.F32         S3, #1
   12 0000000C EE30 1AA1       VADD.F32         S2, S1, S3  ;S2 = S1 + 1 --> S2
                                                             = N + 1
   13 00000010 EEB0 2A00       VMOV.F32         S4, #2
   14 00000014         
   15 00000014         Serie
   16 00000014 EE62 2A00       VMUL.F32         S5, S4, S0  ;S5 = S4 x S0 --> S
                                                            5 = 2n
   17 00000018 EEB1 3AC0       VSQRT.F32        S6, S0      ;S6 = Raíz cuadrada
                                                             de S0 --> S6 = Raí
                                                            z de n 
   18 0000001C         
   19 0000001C EE60 3A00       VMUL.F32         S7, S0, S0  ;S7 = S0 x S0
   20 00000020 EE63 3A80       VMUL.F32         S7, S0      ;S7 = S7 x S0 --> S
                                                            7 = n^3 --> Se obti
                                                            ene la potencia de 
                                                            n^3 
   21 00000024         
   22 00000024 EE32 4A83       VADD.F32         S8, S5, S6  ;S8 = S5 + S6 --> 2
                                                            n + Raíz n
   23 00000028 EE73 4A83       VADD.F32         S9, S7, S6  ;S9 = S7 + S6 --> n
                                                            ^3 + Raíz n
   24 0000002C EE84 5A24       VDIV.F32         S10, S8, S9 ;S10 = S8/S9 --> (2
                                                            n + Raíz n)/(n^3 + 
                                                            Raíz n) 
   25 00000030 EE75 5A85       VADD.F32         S11, S10    ;S11 = S11 + S10 --
                                                            -> RESULTADO. SE HA
                                                            CE LA SUMATORIA DE 
                                                            LA SERIE
   26 00000034         
   27 00000034 EE30 0A21       VADD.F32         S0, S0, S3  ; S0 = S0 + 1 --> n
                                                             = n + 1 --> n++
   28 00000038 EEB4 0A41       VCMP.F32         S0, S2      ; Se compara S0 con
                                                             S2 --> Comparar n 
                                                            con (N+1)
   29 0000003C EEF1 FA10       VMRS             APSR_nzcv, FPSCR
   30 00000040 D000            BEQ              Fin         ;Se verifica sí S0 
                                                            = S2 --> Verifica s
                                                            i n = (N+1) y salta
                                                             a FIN
   31 00000042 E7E7            B                Serie       ;Salta y regresa a 
                                                            ejecutar Serie
   32 00000044         



ARM Macro Assembler    Page 2 


   33 00000044 E7FE    Fin     B                Fin         ;Finaliza Serie
   34 00000046         
   35 00000046         
   36 00000046 00 00           ALIGN
   37 00000048                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\practica_1.d -o.\objects\practica_1.o -I.\RTE\_Target
_1 -IC:\Users\Edesalher\AppData\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Incl
ude\TM4C123 -IC:\Keil_v5\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --predef
ine="__UVISION_VERSION SETA 528" --predefine="TM4C123GH6PM SETA 1" --list=.\lis
tings\practica_1.lst Practica_1.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

CLASE1 00000000

Symbol: CLASE1
   Definitions
      At line 2 in file Practica_1.s
   Uses
      None
Comment: CLASE1 unused
mem 00000000

Symbol: mem
   Definitions
      At line 3 in file Practica_1.s
   Uses
      None
Comment: mem unused
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Fin 00000044

Symbol: Fin
   Definitions
      At line 33 in file Practica_1.s
   Uses
      At line 30 in file Practica_1.s
      At line 33 in file Practica_1.s

Serie 00000014

Symbol: Serie
   Definitions
      At line 15 in file Practica_1.s
   Uses
      At line 31 in file Practica_1.s
Comment: Serie used once
Start 00000000

Symbol: Start
   Definitions
      At line 7 in file Practica_1.s
   Uses
      At line 5 in file Practica_1.s
Comment: Start used once
text. 00000000

Symbol: text.
   Definitions
      At line 4 in file Practica_1.s
   Uses
      None
Comment: text. unused
4 symbols
340 symbols in table
