


ARM Macro Assembler    Page 1 


    1 00000000         ;PROGRAMA QUE PERMITE CONVERTIR LÍNEAS DE AZIMUT Y DISTA
                       NCIA EN COORDENADAS
    2 00000000         
    3 00000000                 THUMB
    4 00000000                 AREA             CLASE1, ALIGN=4
    5 00000000 00 00 00 
              00       mem     SPACE            4
    6 00000004                 AREA             |text.|, CODE, READONLY, ALIGN=
2
    7 00000000                 EXPORT           Start
    8 00000000         
    9 00000000         Start
   10 00000000         ;ÁNGULO AZIMUT EN GRADOS (°):
   11 00000000 ED9F 0A56       VLDR.F32         S0, =45
   12 00000004         ;DISTANCIA EN METROS(m):
   13 00000004 EEF3 0A09       VLDR.F32         S1, =25
   14 00000008         
   15 00000008         ;Valor final (N) de n para sumatoria del Seno y Coseno:
   16 00000008 EEB2 1A04       VLDR.F32         S2, =10
   17 0000000C         ;Valor inicial de n para sumatoria del Seno y Coseno:
   18 0000000C EDDF 6A54       VLDR.F32         S13, =0     ;S13 = 0 --> n = 0
   19 00000010         
   20 00000010         Convertir_Grados_A_Radianes
   21 00000010 EDDF 1A54       VLDR.F32         S3, =3.141592654 ;S3 = Pi
   22 00000014 ED9F 2A54       VLDR.F32         S4, =180    ;S4 = 180
   23 00000018 EE20 0A21       VMUL.F32         S0, S3      ;S0 = S0*S3 = Ángul
                                                            o*Pi
   24 0000001C EE80 0A02       VDIV.F32         S0, S4      ; S0 = S0/180 --> S
                                                            0 = Ángulo Azimut e
                                                            n radianes
   25 00000020 E028            B                Serie_Seno
   26 00000022         
   27 00000022         Potencia
   28 00000022 EEB5 2A40       VCMP.F32         S4, #0      ;Compara S4 con 0
   29 00000026 EEF1 FA10       VMRS             APSR_nzcv, FPSCR
   30 0000002A D00B            BEQ              FinPot
   31 0000002C         
   32 0000002C EEB7 3A00       VMOV.F32         S6, #1      ;S6 = 1
   33 00000030 EE62 2AA1       VMUL.F32         S5, S5, S3  ;S5 = S5*S3 (S5 = R
                                                            ESULTADO DE LA POTE
                                                            NCIA)
   34 00000034 EE32 2A43       VSUB.F32         S4, S4, S6  ;S4 = S4 - 1 = n--
   35 00000038 EEB5 2A40       VCMP.F32         S4, #0      ;Compara S4 con 0
   36 0000003C EEF1 FA10       VMRS             APSR_nzcv, FPSCR
   37 00000040 D000            BEQ              FinPot
   38 00000042 E7EE            B                Potencia
   39 00000044 4770    FinPot  BX               LR
   40 00000046         
   41 00000046         Factorial
   42 00000046         ;Multiplicar el valor actual de n y el resultado acumula
                       do.
   43 00000046         ;S4 = RESULTADO DEL FACTORIAL
   44 00000046 EE22 2A21       VMUL.F32         S4,S3
   45 0000004A         ;Sustraer 1 al valor actual de n.
   46 0000004A EE71 1AE2       VSUB.F32         S3,S5
   47 0000004E         ;Verificar si Resultado es igual a 0 (ya no quedan númer
                       os por multiplicar).
   48 0000004E EEB5 2A40       VCMP.F32         S4,#0
   49 00000052 EEF1 FA10       VMRS             APSR_nzcv, FPSCR ;Trasladar ban



ARM Macro Assembler    Page 2 


                                                            deras de FPSCR a AP
                                                            SR.
   50 00000056 BF08 EEB7 
              2A00             VMOVEQ.F32       S4, #1      ;El Resultado del f
                                                            actorial es 1.
   51 0000005C D009            BEQ              FinFactor   ;Si Resultado es ig
                                                            ual a 0, termina.
   52 0000005E         ;Verificar si n a llegado a 0 (ya no quedan números por 
                       multiplicar).
   53 0000005E EEF5 1A40       VCMP.F32         S3,#0
   54 00000062 EEF1 FA10       VMRS             APSR_nzcv, FPSCR ;Trasladar ban
                                                            deras de FPSCR a AP
                                                            SR.
   55 00000066 D004            BEQ              FinFactor   ;Si n es igual a 0,
                                                             termina.
   56 00000068         ;Verificar si se ha llegado a 1 (ya no quedan números po
                       r multiplicar).
   57 00000068 EEF4 1A62       VCMP.F32         S3,S5
   58 0000006C EEF1 FA10       VMRS             APSR_nzcv, FPSCR ;Trasladar ban
                                                            deras de FPSCR a AP
                                                            SR.
   59 00000070 D1E9            BNE              Factorial   ;Si n no es igual a
                                                             1, seguir operando
                                                            
   60 00000072 4770    FinFactor
                               BX               LR
   61 00000074         
   62 00000074         Serie_Seno
   63 00000074 EEFF 1A00       VMOV.F32         S3, #-1     ;S3 = -1
   64 00000078 EEB0 2A66       VMOV.F32         S4, S13     ;S4 = n
   65 0000007C EEF7 2A00       VMOV.F32         S5, #1      ;S5 = 1
   66 00000080 F7FF FFCF       BL               Potencia
   67 00000084 EEF0 3A62       VMOV.F32         S7, S5      ;S7 = S5 = (-1)^n
   68 00000088         
   69 00000088 EEF0 1A40       VMOV.F32         S3, S0      ;S3 = x = Ángulo Az
                                                            imut en radianes
   70 0000008C EEB0 4A00       VMOV.F32         S8, #2      ;S8 = 2
   71 00000090 EEF0 4A66       VMOV.F32         S9, S13     ;S9 = n
   72 00000094 EEB7 5A00       VMOV.F32         S10, #1     ;S10 = 1
   73 00000098 EE04 5A24       VMLA.F32         S10, S8, S9 ;S10 = 2*n + 1
   74 0000009C EEB0 2A45       VMOV.F32         S4, S10     ;S4 = 2*n + 1
   75 000000A0 EEF7 2A00       VMOV.F32         S5, #1      ;S5 = 1
   76 000000A4 F7FF FFBD       BL               Potencia
   77 000000A8 EEB0 4A62       VMOV.F32         S8, S5      ;S8 = S5 = x^(2*n +
                                                             1)
   78 000000AC         
   79 000000AC EE63 3A84       VMUL.F32         S7, S7, S8  ;S7 = S7*S8 = [(-1)
                                                            ^n]*[x^(2*n + 1)] N
                                                            ÚMERADOR
   80 000000B0         
   81 000000B0 EEF0 1A45       VMOV.F32         S3, S10     ;S3 = 2*n + 1
   82 000000B4 EEB7 2A00       VMOV.F32         S4, #1      ;S4 = 1
   83 000000B8 EEF7 2A00       VMOV.F32         S5, #1      ;S5 = 1
   84 000000BC F7FF FFC3       BL               Factorial
   85 000000C0 EEB0 4A42       VMOV.F32         S8, S4      ;S8 = S4 = (2*n + 1
                                                            )! DENOMINADOR
   86 000000C4         
   87 000000C4 EE83 4A84       VDIV.F32         S8, S7, S8  ;S8 = S7/S8 = [(-1)
                                                            ^n]*[x^(2*n + 1)]/(



ARM Macro Assembler    Page 3 


                                                            2*n + 1)! 
   88 000000C8 EE75 5A84       VADD.F32         S11, S11, S8 ;S11 = S11 + S8 --
                                                            > RESULTADO DEL Sen
                                                             X
   89 000000CC         
   90 000000CC EEF7 1A00       VMOV.F32         S3, #1      ;S3 = 1
   91 000000D0 EE76 6AA1       VADD.F32         S13, S13, S3 ;S13 = S13 + 1 = n
                                                            ++
   92 000000D4 EE31 2A21       VADD.F32         S4, S2, S3  ;S4 = S2 + 1 = (N+1
                                                            )
   93 000000D8 EEF4 6A42       VCMP.F32         S13, S4     ;Compara n con (N+1
                                                            )
   94 000000DC EEF1 FA10       VMRS             APSR_nzcv, FPSCR
   95 000000E0         ;BEQ Fin  ;Se verifica sí S13 = S4 --> Verifica si n = (
                       N+1) y salta a FIN
   96 000000E0 D1C8            BNE              Serie_Seno  ;Salta y regresa a 
                                                            ejecutar Serie del 
                                                            Seno
   97 000000E2         ;B Serie_Seno  ;Salta y regresa a ejecutar Serie del Sen
                       o
   98 000000E2         
   99 000000E2         
  100 000000E2 EDDF 6A1F       VLDR.F32         S13, =0     ;S13 = 0 --> Se vue
                                                            lve a inicializar n
                                                             = 0
  101 000000E6         Serie_Coseno
  102 000000E6 EEFF 1A00       VMOV.F32         S3, #-1     ;S3 = -1
  103 000000EA EEB0 2A66       VMOV.F32         S4, S13     ;S4 = n
  104 000000EE EEF7 2A00       VMOV.F32         S5, #1      ;S5 = 1
  105 000000F2 F7FF FF96       BL               Potencia
  106 000000F6 EEF0 3A62       VMOV.F32         S7, S5      ;S7 = S5 = (-1)^n
  107 000000FA         
  108 000000FA EEF0 1A40       VMOV.F32         S3, S0      ;S3 = x = Ángulo Az
                                                            imut en radianes
  109 000000FE EEB0 4A00       VMOV.F32         S8, #2      ;S8 = 2
  110 00000102 EEF0 4A66       VMOV.F32         S9, S13     ;S9 = n
  111 00000106         ;VMOV.F32 S10, #1 ;S10 = 1
  112 00000106         ;VMLA.F32 S10, S8, S9 ;S10 = 2*n + 1
  113 00000106 EE24 5A24       VMUL.F32         S10, S8, S9 ;S10 = 2*n
  114 0000010A         ;VMOV.F32 S4, S10 ;S4 = 2*n + 1
  115 0000010A EEB0 2A45       VMOV.F32         S4, S10     ;S4 = 2*n
  116 0000010E EEF7 2A00       VMOV.F32         S5, #1      ;S5 = 1
  117 00000112 F7FF FF86       BL               Potencia
  118 00000116         ;VMOV.F32 S8, S5 ;S8 = S5 = x^(2*n + 1)
  119 00000116 EEB0 4A62       VMOV.F32         S8, S5      ;S8 = S5 = x^(2*n)
  120 0000011A         
  121 0000011A         ;VMUL.F32 S7, S7, S8 ;S7 = S7*S8 = [(-1)^n]*[x^(2*n + 1)
                       ] NÚMERADOR
  122 0000011A EE63 3A84       VMUL.F32         S7, S7, S8  ;S7 = S7*S8 = [(-1)
                                                            ^n]*[x^(2*n)] NÚMER
                                                            ADOR
  123 0000011E         
  124 0000011E         ;VMOV.F32 S3, S10 ;S3 = 2*n + 1
  125 0000011E EEF0 1A45       VMOV.F32         S3, S10     ;S3 = 2*n
  126 00000122 EEB7 2A00       VMOV.F32         S4, #1      ;S4 = 1
  127 00000126 EEF7 2A00       VMOV.F32         S5, #1      ;S5 = 1
  128 0000012A F7FF FF8C       BL               Factorial
  129 0000012E         ;VMOV.F32 S8, S4 ;S8 = S4 = (2*n + 1)! DENOMINADOR
  130 0000012E EEB0 4A42       VMOV.F32         S8, S4      ;S8 = S4 = (2*n)! D



ARM Macro Assembler    Page 4 


                                                            ENOMINADOR
  131 00000132         
  132 00000132         ;VDIV.F32 S8, S7, S8 ;S8 = S7/S8 = [(-1)^n]*[x^(2*n + 1)
                       ]/(2*n + 1)! 
  133 00000132 EE83 4A84       VDIV.F32         S8, S7, S8  ;S8 = S7/S8 = [(-1)
                                                            ^n]*[x^(2*n)]/(2*n)
                                                            ! 
  134 00000136 EE36 6A04       VADD.F32         S12, S12, S8 ;S12 = S12 + S8 --
                                                            > RESULTADO DEL Cos
                                                             X
  135 0000013A         
  136 0000013A EEF7 1A00       VMOV.F32         S3, #1      ;S3 = 1
  137 0000013E EE76 6AA1       VADD.F32         S13, S13, S3 ;S13 = S13 + 1 = n
                                                            ++
  138 00000142 EE31 2A21       VADD.F32         S4, S2, S3  ;S4 = S2 + 1 = (N+1
                                                            )
  139 00000146 EEF4 6A42       VCMP.F32         S13, S4     ;Compara n con (N+1
                                                            )
  140 0000014A EEF1 FA10       VMRS             APSR_nzcv, FPSCR
  141 0000014E         ;BEQ Fin  ;Se verifica sí S13 = S4 --> Verifica si n = (
                       N+1) y salta a FIN
  142 0000014E D1CA            BNE              Serie_Coseno ;Salta y regresa a
                                                             ejecutar Serie del
                                                             Coseno
  143 00000150         ;B Serie_Coseno  ;Salta y regresa a ejecutar Serie del C
                       oseno
  144 00000150         
  145 00000150         CALCULAR_COORDENADAS
  146 00000150         ;CALCULO DE LA COORDENADA EN X:
  147 00000150 EE65 5AA0       VMUL.F32         S11, S1     ;S11 = (Sen X)*Dist
                                                            ancia
  148 00000154         ;CALCULO DE LA COORDENADA EN Y:
  149 00000154 EE26 6A20       VMUL.F32         S12, S1     ;S12 = (Cos X)*Dist
                                                            ancia
  150 00000158         
  151 00000158 E7FE    Fin     B                Fin
  152 0000015A         
  153 0000015A 00 00           ALIGN
  154 0000015C                 END
              42340000 
              00000000 
              40490FDB 
              43340000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\e5_2doexamen.d -o.\objects\e5_2doexamen.o -I.\RTE\_Ta
rget_1 -IC:\Users\Edesalher\AppData\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\
Include\TM4C123 -IC:\Keil_v5\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --pr
edefine="__UVISION_VERSION SETA 528" --predefine="TM4C123GH6PM SETA 1" --list=.
\listings\e5_2doexamen.lst E5_2doEXAMEN.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

CLASE1 00000000

Symbol: CLASE1
   Definitions
      At line 4 in file E5_2doEXAMEN.s
   Uses
      None
Comment: CLASE1 unused
mem 00000000

Symbol: mem
   Definitions
      At line 5 in file E5_2doEXAMEN.s
   Uses
      None
Comment: mem unused
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

CALCULAR_COORDENADAS 00000150

Symbol: CALCULAR_COORDENADAS
   Definitions
      At line 145 in file E5_2doEXAMEN.s
   Uses
      None
Comment: CALCULAR_COORDENADAS unused
Convertir_Grados_A_Radianes 00000010

Symbol: Convertir_Grados_A_Radianes
   Definitions
      At line 20 in file E5_2doEXAMEN.s
   Uses
      None
Comment: Convertir_Grados_A_Radianes unused
Factorial 00000046

Symbol: Factorial
   Definitions
      At line 41 in file E5_2doEXAMEN.s
   Uses
      At line 59 in file E5_2doEXAMEN.s
      At line 84 in file E5_2doEXAMEN.s
      At line 128 in file E5_2doEXAMEN.s

Fin 00000158

Symbol: Fin
   Definitions
      At line 151 in file E5_2doEXAMEN.s
   Uses
      At line 151 in file E5_2doEXAMEN.s
Comment: Fin used once
FinFactor 00000072

Symbol: FinFactor
   Definitions
      At line 60 in file E5_2doEXAMEN.s
   Uses
      At line 51 in file E5_2doEXAMEN.s
      At line 55 in file E5_2doEXAMEN.s

FinPot 00000044

Symbol: FinPot
   Definitions
      At line 39 in file E5_2doEXAMEN.s
   Uses
      At line 30 in file E5_2doEXAMEN.s
      At line 37 in file E5_2doEXAMEN.s

Potencia 00000022

Symbol: Potencia
   Definitions
      At line 27 in file E5_2doEXAMEN.s
   Uses
      At line 38 in file E5_2doEXAMEN.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 66 in file E5_2doEXAMEN.s
      At line 76 in file E5_2doEXAMEN.s
      At line 105 in file E5_2doEXAMEN.s
      At line 117 in file E5_2doEXAMEN.s

Serie_Coseno 000000E6

Symbol: Serie_Coseno
   Definitions
      At line 101 in file E5_2doEXAMEN.s
   Uses
      At line 142 in file E5_2doEXAMEN.s
Comment: Serie_Coseno used once
Serie_Seno 00000074

Symbol: Serie_Seno
   Definitions
      At line 62 in file E5_2doEXAMEN.s
   Uses
      At line 25 in file E5_2doEXAMEN.s
      At line 96 in file E5_2doEXAMEN.s

Start 00000000

Symbol: Start
   Definitions
      At line 9 in file E5_2doEXAMEN.s
   Uses
      At line 7 in file E5_2doEXAMEN.s
Comment: Start used once
text. 00000000

Symbol: text.
   Definitions
      At line 6 in file E5_2doEXAMEN.s
   Uses
      None
Comment: text. unused
11 symbols
349 symbols in table
